#include <dt-bindings/zmk/matrix_transform.h>

&pinctrl {
    spi0_default: spi0_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 8)>,
                <NRF_PSEL(SPIM_MOSI, 0, 17)>,
                <NRF_PSEL(SPIM_MISO, 0, 17)>;
        };
    };

    spi0_sleep: spi0_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 8)>,
                <NRF_PSEL(SPIM_MOSI, 0, 17)>,
                <NRF_PSEL(SPIM_MISO, 0, 17)>;
            low-power-enable;
        };
    };
};

#include <zephyr/dt-bindings/input/input-event-codes.h>

&spi0 {
    status = "okay";
    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi0_default>;
    pinctrl-1 = <&spi0_sleep>;
    pinctrl-names = "default", "sleep";
    cs-gpios = <&gpio0 20 GPIO_ACTIVE_LOW>;

    trackball: trackball@0 {
        status = "okay";
        compatible = "pmw3610";
        reg = <0>;
        spi-max-frequency = <2000000>;
        irq-gpios = <&gpio0 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        cpi = <600>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;

        force-awake;
        /* keep the sensor awake while ZMK activity state is ACTIVE,
           fallback to normal downshift mode after ZMK goes into IDLE / SLEEP mode.
           thus, the sensor would be a `wakeup-source` */
    };
};

/ {
    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;
// | k00  | k01  | k02  | k03  | k04  | k05  |                  | k45  | k44  | k43  | k42  | k41  | k40  |
// | k10  | k11  | k12  | k13  | k14  | k15  |                  | k55  | k54  | k53  | k52  | k51  | k50  |
// | k20  | k21  | k22  | k23  | k24  | k25  |                  | k65  | k64  | k63  | k62  | k61  | k60  |
//                      | k33  | k34  | k32  |                  | k71  | k74  | k73  |
        map = <
RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)                 RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11)
RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)                 RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11)
RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)                 RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)
                        RC(3,3) RC(3,4) RC(3,5)                 RC(3,6) RC(3,7)
        >;
    };

	kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";

        diode-direction = "row2col";
		row-gpios = <&gpio0 0 GPIO_ACTIVE_HIGH>,  // GP0 (Row 0)
             <&gpio0 1 GPIO_ACTIVE_HIGH>,  // GP1 (Row 1)
             <&gpio0 2 GPIO_ACTIVE_HIGH>,  // GP2 (Row 2)
             <&gpio0 3 GPIO_ACTIVE_HIGH>;  // GP3 (Row 3)

        col-gpios = <&gpio0 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,  // GP6 (Col 0)
             <&gpio0 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,  // GP7 (Col 1)
             <&gpio0 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,  // GP8 (Col 2)
             <&gpio0 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,  // GP9 (Col 3)
             <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>, // GP10 (Col 4)
             <&gpio0 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>; // GP11 (Col 5)
    };

    trackball_listener {
	    compatible = "zmk,input-listener";
	    device = <&trackball>;
    };
};